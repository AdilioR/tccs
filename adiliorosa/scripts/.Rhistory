carregarDataset <- function(fileNameWithExtension)
{
setwd(workingDirectory)
load(fileNameWithExtension)
}
workingDirectory <- "C:/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarket/scripts/"
carregarDataset("ABEV3.SA_workspace_rsi9-15.RData")
carregarDataset("ABEV3.SA_workspace_rsi9-15.RData")
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
carregarDataset("ABEV3.SA_workspace_rsi9-15.RData")
carregarDataset("ABEV3.SA_workspace_rsi9-15.RData")
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
carregarDataset("ABEV3.SA_workspace_rsi9-15.RData")
View(carregarDataset)
carregarDataset("ABEV3.SA_workspace_rsi9-15.RData")
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
carregarDataset <- function(fileNameWithExtension)
{
setwd(workingDirectory)
load(fileNameWithExtension)
}
carregarDataset("ABEV3.SA_workspace_rsi9-15.RData")
load("ABEV3.SA_workspace_rsi9-15.RData")
View(Result.StrategyList)
graphics <- function()
{
require(ggplot2)
g = ggplot(Result.StrategyList, aes(x = indicador.points_treino, y = indicador.points_teste))
g + geom_point(aes(color = strategy_name), size=3, show.legend = TRUE)
# min distance
g = ggplot(Result.StrategyList, aes(x = indicador.points_treino, y = indicador.points_teste))
g + geom_point(aes(color = min_distance_between_operations), size=3, show.legend = TRUE)
# precision tolerance
g = ggplot(Result.StrategyList, aes(x = indicador.points_treino, y = indicador.points_teste))
g + geom_point(aes(color = precision_tolerance), size=3, show.legend = TRUE)
#retorno medio
g = ggplot(Result.StrategyList, aes(x = average_return_train, y = average_return_test))
g + geom_point(aes(color = strategy_name), size=3, show.legend = TRUE)
Asset.TransactionList.Partial <- Asset.TransactionList[Asset.TransactionList$Date > "2017-01-01",]
#expected classes
g = ggplot(Asset.TransactionList.Partial, aes(x = Date, y = Adj_Close))
g + geom_point(aes(color = ExpectedClasses), size=3, show.legend = TRUE)
#predicted classes
g = ggplot(Asset.TransactionList.Partial, aes(x = Date, y = Adj_Close))
g + geom_point(aes(color = PredictedClasses), size=2, show.legend = TRUE)
}
require(ggplot2)
g = ggplot(Result.StrategyList, aes(x = indicador.points_treino, y = indicador.points_teste))
g + geom_point(aes(color = strategy_name), size=3, show.legend = TRUE)
g = ggplot(Result.StrategyList, aes(x = indicador.points_treino, y = indicador.points_teste))
g + geom_point(aes(color = min_distance_between_operations), size=3, show.legend = TRUE)
g = ggplot(Result.StrategyList, aes(x = indicador.points_treino, y = indicador.points_teste))
g + geom_point(aes(color = precision_tolerance), size=3, show.legend = TRUE)
g = ggplot(Result.StrategyList, aes(x = average_return_train, y = average_return_test))
g + geom_point(aes(color = strategy_name), size=3, show.legend = TRUE)
Asset.TransactionList.Partial <- Asset.TransactionList[Asset.TransactionList$Date > "2017-01-01",]
#expected classes
g = ggplot(Asset.TransactionList.Partial, aes(x = Date, y = Adj_Close))
g + geom_point(aes(color = ExpectedClasses), size=3, show.legend = TRUE)
g = ggplot(Asset.TransactionList.Partial, aes(x = Date, y = Adj_Close))
g + geom_point(aes(color = PredictedClasses), size=2, show.legend = TRUE)
load("ABEV3.SA_88_MACD_workspace.RData")
load("ABEV3.SA_88_MACD_workspace.RData")
View(Result.StrategyList)
View(Asset.TransactionList.Partial)
rm("Asset.New_Asset")
resultTmp <- Result.StrategyList
load("ABEV3.SA_workspace_rsi9-15.RData")
View(resultTmp)
View(Result.StrategyList)
library(gtools)
install.packages("gtools")
library(gtools)
require("gtools")
Result.StrategyList <- smartbind(Result.StrategyList, resultTmp)
View(Result.StrategyList)
load("ABEV3.SA_88_MACD_workspace.RData")
load("ABEV3.SA_workspace_rsi9-15.RData")
Result.StrategyList <- rbind(Result.StrategyList, resultTmp)
View(Result.StrategyList)
source('C:/StockMarketGit/arosa/StockMarket/scripts/Client.r', encoding = 'UTF-8')
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
Main.setCandidateStrategies()
save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
rm(Result.CandidateStrategyList)
rm(Result.StrategyList)
print(paste("rm: ", Sys.time()))
}
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
Main.setCandidateStrategies()
save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
rm(Result.CandidateStrategyList)
rm(Result.StrategyList)
print(paste("rm: ", Sys.time()))
}
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
Main.setCandidateStrategies()
save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
rm(Result.CandidateStrategyList)
rm(Result.StrategyList)
print(paste("rm: ", Sys.time()))
}
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
Main.setCandidateStrategies()
save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
rm(Result.CandidateStrategyList)
rm(Result.StrategyList)
print(paste("rm: ", Sys.time()))
}
View(Asset.TransactionList)
View(Result.StrategyList)
load("C:/StockMarketGit/arosa/StockMarket/rworkingdirectory/ABEV3.SA_121_SMA_workspace.RData")
load("C:/StockMarketGit/arosa/StockMarket/rworkingdirectory/ABEV3.SA_123_SMA_workspace.RData")
View(Result.CandidateStrategyList)
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
Main.setCandidateStrategies()
save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
rm(Result.CandidateStrategyList)
rm(Result.StrategyList)
print(paste("rm: ", Sys.time()))
}
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
print("blabla")
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
Main.setCandidateStrategies()
save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
rm(Result.CandidateStrategyList)
rm(Result.StrategyList)
print(paste("rm: ", Sys.time()))
}
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
Main.setCandidateStrategies()
save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
rm(Result.CandidateStrategyList)
rm(Result.StrategyList)
print(paste("rm: ", Sys.time()))
}
View(Asset.TransactionList)
carregarDataset <- function(fileNameWithExtension)
{
setwd(workingDirectory)
load(fileNameWithExtension)
}
carregarDataset("ABEV3.SA_214_SMA_workspace.RData")
View(Asset.TransactionList)
carregarDataset("ABEV3.SA_214_SMA_workspace.RData")
load("ABEV3.SA_214_SMA_workspace.RData")
View(Result.StrategyList)
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
#save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
print(paste("rm: ", Sys.time()))
}
View(Result.StrategyList)
# Remove todos os objetos do workspace
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
#save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
}
View(Result.CandidateStrategyList)
View(Result.StrategyList)
rm(list = ls())
# Configurações de diretórios do projeto
workingDirectory <- "C:/StockMarketGit/arosa/StockMarket/rworkingdirectory"
scriptsDirectory <- "C:/StockMarketGit/arosa/StockMarket/scripts/"
# Determina em qual diret?io o working directory
setwd(workingDirectory)
# -> Carrega scripts com vari?eis globais e fun?es necess?ias
source(paste(scriptsDirectory, "Main.R", sep = ""))
source(paste(scriptsDirectory, "TechnicalAnalysis.R", sep = ""))
# Remove todos os objetos do workspace
asset.name <- "ABEV3.SA"
#@TODO: receber o dataset, em vez de inserir no workspace
Main.loadCsvIntoWorkspace(asset.name, as.Date("1970-01-01"), header = TRUE, sep = ",")
for(nSlow in seq(from=121, to=220, by=1)) # 60 a 220
{ # Cada ?dice ?um tamanho de m?ia m?el
for(nFast in seq(from=5, to=8, by=1))
{ # 5 a 55
#SMA
predicted_decision_list <- TechnicalAnalysis.getDecisionList.SMA(nFast, nSlow) #lista ok
Main.setStrategyResults(asset.name = asset.name, asset.transaction_list.prices = Asset.TransactionList$Adj_Close, asset.transaction_list.dates = Asset.TransactionList$Date, strategy_name = "SMA", strategy_details = paste("long-", nSlow, "_short-", nFast, sep = ""), predicted_decision_list = predicted_decision_list, percent_train = 0.8)
}
Main.avoidFactors()
#save.image(file = paste(asset.name, nSlow, "SMA_workspace.RData", sep = "_"))
print(paste("Finalizado as: ", Sys.time()))
}
View(Result.StrategyList)
